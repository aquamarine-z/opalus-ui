{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "modal",
  "type": "registry:ui",
  "title": "Modal",
  "description": "A group of function for showing modal",
  "dependencies": [
    "@ebay/nice-modal-react"
  ],
  "registryDependencies": [
    "dialog",
    "opalus-ui/opalus-dialog-content"
  ],
  "files": [
    {
      "path": "registry/ui/modal.tsx",
      "content": "\"use client\";\r\nimport type {ReactNode} from \"react\";\r\nimport NiceModal, {useModal} from \"@ebay/nice-modal-react\";\r\nimport {Dialog, DialogClose, DialogContent, DialogHeader, DialogTitle} from \"@/components/ui/dialog\";\r\nimport {Button} from \"@/components/ui/button.tsx\";\r\nimport {AlertCircle} from \"lucide-react\";\r\n\r\ntype CustomModalProps = {\r\n    content: (close: (result?: any) => void) => ReactNode;\r\n    resolve?: (value: any) => void;\r\n};\r\n\r\nconst CustomModal = NiceModal.create(({content, resolve}: CustomModalProps) => {\r\n    const modal = useModal();\r\n    const handleClose = (result?: any) => {\r\n        modal.hide();\r\n        modal.remove();\r\n        resolve?.(result);\r\n\r\n    };\r\n    return (\r\n        <Dialog open={modal.visible} onOpenChange={(v) => !v && handleClose()}>\r\n            {content(handleClose)}\r\n        </Dialog>\r\n    );\r\n});\r\nexport type ModalOptions = {\r\n    hasCloseButton?: boolean;\r\n    title?: ReactNode;\r\n    titleIcon?: ReactNode;\r\n    showTitleIcon?: boolean;\r\n}\r\nexport type AlertModalOptions = {\r\n    message?: ReactNode | ReactNode[];\r\n    closeButtonContent?: ReactNode;\r\n} & ModalOptions;\r\nexport type ConfirmModalOptions = {\r\n    message?: ReactNode | ReactNode[];\r\n    confirmButtonContent?: ReactNode;\r\n    cancelButtonContent?: ReactNode;\r\n} & ModalOptions;\r\n\r\n\r\nexport const modal = {\r\n    custom: <T = any>(\r\n        content: (close: (result?: T) => void) => ReactNode\r\n    ): Promise<T | undefined> => {\r\n        return new Promise((resolve) => {\r\n            NiceModal.show(CustomModal, {content, resolve});\r\n        });\r\n    },\r\n    alert: (options: AlertModalOptions) => {\r\n        return modal.custom<null>((close) => {\r\n            return <DialogContent showCloseButton={options.hasCloseButton || true}>\r\n                <DialogHeader>\r\n                    <DialogTitle className={\"flex flex-row items-center gap-2\"}>\r\n                        {(options.showTitleIcon || true) && (options.titleIcon || <AlertCircle className={\"h-5 w-5\"}/>)}\r\n                        {options.title || \"Alert\"}\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className={\"flex flex-col gap-3 items-center\"}>\r\n                    <div>{options.message}</div>\r\n                    <DialogClose asChild>\r\n                        {options.closeButtonContent || <Button variant={\"outline\"}>Close</Button>}\r\n                    </DialogClose>\r\n                </div>\r\n            </DialogContent>\r\n        })\r\n    },\r\n    confirm: (options: ConfirmModalOptions) => {\r\n        return modal.custom<boolean>((close) => {\r\n            return <DialogContent showCloseButton={options.hasCloseButton || true}>\r\n                <DialogHeader>\r\n                    <DialogTitle className={\"flex flex-row items-center gap-2\"}>\r\n                        {(options.showTitleIcon || true) && (options.titleIcon || <AlertCircle className={\"h-5 w-5\"}/>)}\r\n                        {options.title || \"Confirm\"}\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className={\"flex flex-col gap-3 items-center\"}>\r\n                    <div>{options.message}</div>\r\n                    <div className={\"flex flex-row gap-3\"}>\r\n                        <DialogClose asChild onClick={() => close(false)}>\r\n                            {options.cancelButtonContent || <Button variant={\"outline\"}>Cancel</Button>}\r\n                        </DialogClose>\r\n                        <DialogClose asChild onClick={() => close(true)}>\r\n                            {options.confirmButtonContent || <Button>Confirm</Button>}\r\n                        </DialogClose>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        })\r\n    }\r\n\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}